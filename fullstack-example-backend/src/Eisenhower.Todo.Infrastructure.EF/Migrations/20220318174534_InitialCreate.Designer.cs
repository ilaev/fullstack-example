// <auto-generated />
using System;
using Eisenhower.Todo.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Eisenhower.Todo.Infrastructure.EF.Migrations
{
    [DbContext(typeof(EisenhowerTodoDbContext))]
    [Migration("20220318174534_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Eisenhower.Todo.Infrastructure.EF.Entities.TodoItem", b =>
                {
                    b.Property<long>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DbId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("MarkedAsDone")
                        .HasColumnType("boolean");

                    b.Property<int>("MatrixX")
                        .HasColumnType("integer");

                    b.Property<int>("MatrixY")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("character varying(16384)");

                    b.HasKey("DbId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Items", "public");
                });

            modelBuilder.Entity("Eisenhower.Todo.Infrastructure.EF.Entities.TodoList", b =>
                {
                    b.Property<long>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DbId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("DbId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Lists", "public");
                });

            modelBuilder.Entity("Eisenhower.Todo.Infrastructure.EF.Entities.User", b =>
                {
                    b.Property<long>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DbId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("DbId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users", "public");
                });

            modelBuilder.Entity("TodoItemTodoList", b =>
                {
                    b.Property<long>("TodoItemsDbId")
                        .HasColumnType("bigint");

                    b.Property<long>("TodoListsDbId")
                        .HasColumnType("bigint");

                    b.HasKey("TodoItemsDbId", "TodoListsDbId");

                    b.HasIndex("TodoListsDbId");

                    b.ToTable("ListItems", "public");
                });

            modelBuilder.Entity("TodoListUser", b =>
                {
                    b.Property<long>("TodoListsDbId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersDbId")
                        .HasColumnType("bigint");

                    b.HasKey("TodoListsDbId", "UsersDbId");

                    b.HasIndex("UsersDbId");

                    b.ToTable("UserLists", "public");
                });

            modelBuilder.Entity("TodoItemTodoList", b =>
                {
                    b.HasOne("Eisenhower.Todo.Infrastructure.EF.Entities.TodoItem", null)
                        .WithMany()
                        .HasForeignKey("TodoItemsDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eisenhower.Todo.Infrastructure.EF.Entities.TodoList", null)
                        .WithMany()
                        .HasForeignKey("TodoListsDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TodoListUser", b =>
                {
                    b.HasOne("Eisenhower.Todo.Infrastructure.EF.Entities.TodoList", null)
                        .WithMany()
                        .HasForeignKey("TodoListsDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eisenhower.Todo.Infrastructure.EF.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
