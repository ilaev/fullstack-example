☐ implement unsaved changes dialog for all editors
✔ unmarked items as done @done(22-01-15 15:08)
✔ back button in todolistview @done(22-01-15 15:06)
✔ should be able to show all quadrants in todolistview @done(22-01-15 15:06)
✔ something is wrong with editing an existing entry - it's created twice. @done(22-01-20 20:55)
☐ sort could be added to the todolistview
☐ items should be probably sorted by due date? and name
✔ do not save initial sidebar opening to location history skipLocationChange replaceUrl @done(22-01-20 20:55)
✔ editor views css broken in iPad @done(22-01-15 15:06)
✔ edit project/list @done(22-01-15 15:09)
☐ delete project/list
☐ consider whether the done status bar should reflect which matrix kind was selected. 
    example: if today is selected, status bar should show 4/10 todo items with due date of today done.
    upcoming
    all
    or project

    // list view should show percentage ???
    // it's good in projects but probably bad everywhere else but TODAY 
    // since it will never reach 100%, a user would continue to add items
    // for lists though, I can image using lists for projects or whatever
    // this is not  a real app anyways. Personally ToDoApps never helped me?
☐ implement guid type by using the npm package 'uuid' (https://www.npmjs.com/package/uuid) and either implement this interface https://github.com/snico-dev/guid-typescript/blob/master/lib/guid.ts or the .NET Guid interface


TOOD for tomorrow:
    ☐ add ITodoDataService interface and set the implementation depending on the provided settings which are coming from the environment.ts
    ☐ add IUserDataService interface and do the same thing as for the data service
    ✔ write missing tests for TodoDataService @done(22-03-24 18:38)
    ☐ write some tests for the backend and commit, review and merge branch
        only write one tests for each project, a controller test, a service test and and repository test
        some domain tests
        that should be enough
    ☐ create branch for frontend changes 
    ☐ update portofilio page to include this app with the inmemory data store